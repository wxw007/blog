{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{355:function(t,e,a){\"use strict\";a.r(e);var n=a(43),v=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"css-基础\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css-基础\"}},[t._v(\"#\")]),t._v(\" CSS 基础\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"清除浮动的方式有哪些？\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#清除浮动的方式有哪些？\"}},[t._v(\"#\")]),t._v(\" 清除浮动的方式有哪些？\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"父级 \"),a(\"code\",[t._v(\"div\")]),t._v(\" 设置 height\")]),t._v(\" \"),a(\"li\",[t._v(\"结尾加空 \"),a(\"code\",[t._v(\"div\")]),t._v(\" 元素设置clear:both\")]),t._v(\" \"),a(\"li\",[t._v(\"父级 \"),a(\"code\",[t._v(\"div\")]),t._v(\" 添加伪元素 ::after, 设置clear: both\")]),t._v(\" \"),a(\"li\",[t._v(\"父级 \"),a(\"code\",[t._v(\"div\")]),t._v(\" 定义overflow:hidden 或者 overflow: auto\")]),t._v(\" \"),a(\"li\",[t._v(\"父级 \"),a(\"code\",[t._v(\"div\")]),t._v(\" 也浮动，需要定义宽度\")]),t._v(\" \"),a(\"li\",[t._v(\"父级 \"),a(\"code\",[t._v(\"div\")]),t._v(\" 定义display:table\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"box-sizing常用的属性有哪些？分别有什么作用？\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#box-sizing常用的属性有哪些？分别有什么作用？\"}},[t._v(\"#\")]),t._v(\" box-sizing常用的属性有哪些？分别有什么作用？\")]),t._v(\" \"),a(\"p\",[t._v(\"box-sizing: content-box|border-box|inherit;\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"content-box: 标准盒模型, 宽度盒高度只应用到元素内容, \"),a(\"code\",[t._v(\"padding和border不包含\")]),t._v(\" 在尺寸内。\")]),t._v(\" \"),a(\"li\",[t._v(\"border-box: ie盒模型, 也叫怪异盒模型, 宽度和高度包含了 \"),a(\"code\",[t._v(\"元素内容、padding 和 border\")])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"对bfc规范的理解\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对bfc规范的理解\"}},[t._v(\"#\")]),t._v(\" 对bfc规范的理解\")]),t._v(\" \"),a(\"p\",[t._v(\"BFC全称 Block Formatting Context，译为块级格式化上下文。\\n表现原则: 内部子元素再怎么翻江倒海，都不会影响外部的元素。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"触发bfc条件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#触发bfc条件\"}},[t._v(\"#\")]),t._v(\" 触发BFC条件\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"code\",[t._v(\"<html>\")]),t._v(\" 根元素\")]),t._v(\" \"),a(\"li\",[t._v(\"float 的值不为 none\")]),t._v(\" \"),a(\"li\",[t._v(\"overflow 的值为 auto、scroll 或 hidden\")]),t._v(\" \"),a(\"li\",[t._v(\"display 的值为 table-cell、table-caption 和 inline-block 中的任何一个\")]),t._v(\" \"),a(\"li\",[t._v(\"position 的值不为 relative 和 static\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"只要元素符合上面的任意一个条件，就无需使用 clear: both 属性去清除浮动的影响，因此不要见到一个 \"),a(\"code\",[t._v(\"<div>\")]),t._v(\" 元素就加个类似 .clearfix 的类名，否则只能暴露薄弱的css基本功\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"bfc解决哪些问题\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bfc解决哪些问题\"}},[t._v(\"#\")]),t._v(\" BFC解决哪些问题\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"解决浮动元素令父元素高度塌陷的问题\")]),t._v(\" \"),a(\"li\",[t._v(\"解决自适应布局的问题\")]),t._v(\" \"),a(\"li\",[t._v(\"外边距垂直方向重合问题\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"css实现水平垂直居中\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css实现水平垂直居中\"}},[t._v(\"#\")]),t._v(\" css实现水平垂直居中\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"绝对定位元素的居中实现\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\".center-vertical{\\n    width: 100px;\\n    height: 100px;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    margin-top: -50px; /*高度的一半*/\\n    margin-left: -50px; /宽度的一半*/\\n}\\n\")])])]),a(\"p\",[t._v(\"优点: 兼容性好\")]),t._v(\" \"),a(\"p\",[t._v(\"缺点: 需要提前知道元素的尺寸。如果不知道元素尺寸，这个时候就需要JS获取了\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[t._v(\"使用 transform中的translate实现\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\".content{\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate( -50%, -50%);\\n}\\n\")])])]),a(\"p\",[t._v(\"优点：无论绝对定位元素的尺寸是多少，它都是水平垂直居中显示的\")]),t._v(\" \"),a(\"p\",[t._v(\"缺点：就是兼容性问题\")]),t._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[t._v(\"margin: auto 实现\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\".center-vertical{\\n    width: 100px;\\n    height: 100px;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    margin: auto;\\n}\\n\")])])]),a(\"blockquote\",[a(\"p\",[t._v(\"注意: 上下左右均为 0 位置绝对定位。margin: auto;\")])]),t._v(\" \"),a(\"ol\",{attrs:{start:\"4\"}},[a(\"li\",[t._v(\"flex 布局实现\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\".wrapper{\\n    display: flex;\\n    align-items: center; /*定义body的元素垂直居中*/\\n    justify-content: center; /*定义body的元素水平居中*/\\n}\\n\")])])]),a(\"ol\",{attrs:{start:\"5\"}},[a(\"li\",[t._v(\"display:table实现\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('// css部分\\n.parent{\\n    width: 300px;\\n    height: 300px;\\n    text-align: center;\\n    display: table;\\n}\\n.son{\\n    display: table-cell;\\n    vertical-align: middle;\\n}\\n\\n// html部分\\n\\n<div class=\"parent\">\\n    <div class=\"son\">nihaosssss</div>\\n</div>\\n')])])]),a(\"blockquote\",[a(\"p\",[t._v(\"table 布局只能让行内元素水平垂直居中\")])]),t._v(\" \"),a(\"ol\",{attrs:{start:\"6\"}},[a(\"li\",[t._v(\"relative 水平垂直居中\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n    <meta charset=\"UTF-8\">\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\\n    <title>实现水平垂直居中==相对定位实现</title>\\n    <style>\\n    html,body{\\n        width: 100%;\\n        height: 100%;\\n        margin: 0;\\n        padding: 0;\\n    }\\n    .content{\\n        width: 300px;\\n        height: 300px;\\n        background: orange;\\n        margin: 0 auto;/*水平居中*/\\n        position: relative;/*设置position*/\\n        top: 50%; /*百分比相对于父级尺寸计算！！！！*/\\n        /*margin-top: -150px;*/    /*第一种：margin-top*/\\n        transform: translateY(-50%);/*第二种：transform：转换*/\\n    }\\n    </style>\\n</head>\\n<body>\\n    <div class=\"content\"></div>\\n</body>\\n</html>\\n')])])]),a(\"h2\",{attrs:{id:\"flex布局\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flex布局\"}},[t._v(\"#\")]),t._v(\" flex布局\")]),t._v(\" \"),a(\"p\",[t._v(\"参考: \"),a(\"a\",{attrs:{href:\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"阮一峰的网络日志\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[t._v(\"Flex 布局以后，子元素的float、clear和vertical-align属性将失效。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"以下6个属性设置在容器上。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"flex-direction\")]),t._v(\" 决定主轴的方向（即项目的排列方向）。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"flex-wrap\")]),t._v(\" 如果一条轴线排不下，如何换行。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"flex-flow\")]),t._v(\" 是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"justify-content\")]),t._v(\" 属性定义了项目在主轴上的对齐方式。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"align-items\")]),t._v(\" 定义项目在交叉轴上如何对齐。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"align-content\")]),t._v(\" 定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"以下6个属性设置在项目上。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"order\")]),t._v(\" 定义项目的排列顺序。数值越小，排列越靠前，默认为0。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"flex-grow\")]),t._v(\"属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"flex-shrink\")]),t._v(\"定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"flex-basis\")]),t._v(\" 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"flex\")]),t._v(\" 是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"align-self\")]),t._v(\" 允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。\")])])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"css-选择器权重\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css-选择器权重\"}},[t._v(\"#\")]),t._v(\" css 选择器权重\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"内联样式，如: style=””，权值为\"),a(\"code\",[t._v(\"1000\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[t._v(\"ID选择器，如：#content，权值为\"),a(\"code\",[t._v(\"100\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[t._v(\"类，伪类和属性选择器，如.content，权值为\"),a(\"code\",[t._v(\"10\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[t._v(\"类型选择器和伪元素选择器，如div p，权值为\"),a(\"code\",[t._v(\"1\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[t._v(\"通配符、子选择器、相邻选择器等的。如*、>、+,权值为\"),a(\"code\",[t._v(\"0\")]),t._v(\"。\")])])])}),[],!1,null,null,null);e.default=v.exports}}]);","extractedComments":[]}